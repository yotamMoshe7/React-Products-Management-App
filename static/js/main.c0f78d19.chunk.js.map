{"version":3,"sources":["assets/icons/addImageIcon.webp","components/top-bar/TopBar.jsx","utility/Constants.js","components/buttons-input/ButtonInput.jsx","utility/Utility.js","utility/LocalStorageManagement.js","redux/items/items.type.js","redux/items/items.actions.js","components/page-number-nevigator/PageNumberNevigator.jsx","firebase/Config.js","components/product-image/ProductImage.jsx","hooks/UseStorage.js","components/close-button/CloseButton.jsx","components/form/Form.jsx","components/product-element/ProductElement.jsx","components/products-list/ProductsList.jsx","App.jsx","redux/items/items.reducer.js","redux/root-reducer.js","redux/store.js","index.jsx"],"names":["module","exports","__webpack_require__","p","TopBar","react_default","a","createElement","id","SELECT_LAST_ADDED","ButtonInput","_ref","setAddButtonClick","setSearchField","setSelectSort","onClick","type","placeholder","onChange","event","target","value","name","emptyProductObject","imageUrl","date","title","description","price","inputsValidation","product","length","filterListResults","searchField","toLowerCase","includes","addProductToPriceSortedLocalStorage","console","log","productsArray","JSON","parse","localStorage","getItem","push","parseInt","i","splice","setItem","stringify","deleteProductInPriceSortedLocalStorage","getListFromLocalStorage","selectSort","updateArray","generateIdFromLocalStorage","lastIdValue","ItemActionType","INITIAL_ITEMS_ARRAY","initialProductArray","itemsArray","payload","PageNumberNevigator","page","setPage","filteredProductList","index_es","icon","faAngleLeft","style","fontSize","color","marginRight","faAngleRight","marginLeft","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","ProductImage","setProduct","hiddenFileInput","useRef","_useState","useState","_useState2","Object","slicedToArray","file","setFile","_useState3","_useState4","error","setError","types","handleClick","current","click","url","progress","setProgress","_useState5","_useState6","setUrl","useEffect","storageRef","ref","put","on","snap","percentage","Math","round","bytesTransferred","totalBytes","err","asyncToGenerator","regenerator_default","mark","_callee","downloadUrl","wrap","_context","prev","next","getDownloadURL","sent","stop","useStorage","objectSpread","alt","padding","src","defaultIcon","faUpload","width","height","e","selectedFile","files","display","CloseButton","setMarkProductId","faWindowClose","position","right","className","connect","state","currentItems","items","dispatch","addButtonClick","markProductId","finishSaveProduct","setFinishSaveProduct","errorMessage","setErrorMessage","updateExistProduct","saveNewProduct","handleChange","defineProperty","productToDisplay","find","validationResult","updateProductInLastAddedLocalStorage","updateProductInPriceSortedLocalStorage","updateProductInTitleSortedLocalStorage","addProductToaLastAddedLocalStorage","addProductToTitleSortedLocalStorage","saveButtonClicked","_ref2","Date","apply","this","arguments","CloseButton_CloseButton","ProductImage_ProductImage","ProductElement","productDetails","setProductIdToDelete","finishDeleteProduct","booleanDeleteButtonClicked","backgroundColor","disabled","dateString","concat","getDate","getMonth","getFullYear","formatDate","setFilteredProductList","productIdToDelete","_useState7","_useState8","isFirstArrayInitialize","filteredArray","productToDelete","tempArray","deleteProductInLastAddedLocalStorage","deleteProductInTitleSortedLocalStorage","productsArrayResult","undefined","components_product_element_ProductElement","key","createPageProductsElements","PageNumberNevigator_PageNumberNevigator","form_Form","App","TopBar_TopBar","ButtonInput_ButtonInput","components_products_list_ProductsList","INITIAL_STATE","itemsReducer","action","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0f78d19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addImageIcon.786809da.webp\";","import React from 'react';\r\nimport './TopBar.css';\r\n\r\nexport const TopBar = () => {\r\n  return <div id='topBar'>My Store</div>;\r\n};\r\n","export const EMPTY_INPUT_ERROR_MESSAGE = 'Please fill all the input fields';\r\nexport const PRICE_MIN_ERROR_MESSAGE = 'Price must be greater then 0';\r\nexport const TITLE_ERROR_MESSAGE = 'Title can not contain more then 25 chars';\r\nexport const IMAGE_ERROR_MESSAGE = 'Please upload an image';\r\nexport const DESCRIPTION_ERROR_MESSAGE =\r\n  'Description can not contain more then 130 chars';\r\nexport const PRICE_MAX_ERROR_MESSAGE =\r\n  'Price can not contain more then 7 chars';\r\nexport const NUM_OF_PRODUCTS_IN_PAGE = 4;\r\nexport const MAX_TITLE_CHAR = 22;\r\nexport const MAX_DESCRIPTION_CHAR = 130;\r\nexport const MAX_PRICE_CHAR = 7;\r\nexport const SELECT_HIGHER_PRICE = 'Higher Price';\r\nexport const SELECT_LAST_ADDED = 'Last Added';\r\nexport const SELECT_TITLE = 'title';\r\n","import React from 'react';\r\nimport './ButtonInput.css';\r\nimport {\r\n  SELECT_HIGHER_PRICE,\r\n  SELECT_LAST_ADDED,\r\n  SELECT_TITLE,\r\n} from '../../utility/Constants';\r\n\r\nexport const ButtonInput = ({\r\n  setAddButtonClick,\r\n  setSearchField,\r\n  setSelectSort,\r\n}) => {\r\n  const addButtonClick = () => {\r\n    setAddButtonClick(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  const selectChange = (event) => {\r\n    setSelectSort(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id='buttons-input-wrapper'>\r\n      <div id='add-button-wrapper' onClick={addButtonClick}>\r\n        <button id='add-button'>Add +</button>\r\n      </div>\r\n      <div id='input-wrapper'>\r\n        <input\r\n          id='input'\r\n          type='text'\r\n          placeholder='Search Products'\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div id='sort-by-wrapper'>\r\n        <select name='sort-options' id='sort-by' onChange={selectChange}>\r\n          <option value={SELECT_LAST_ADDED}>{SELECT_LAST_ADDED}</option>\r\n          <option value={SELECT_HIGHER_PRICE}>{SELECT_HIGHER_PRICE}</option>\r\n          <option value={SELECT_TITLE}>{SELECT_TITLE}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  EMPTY_INPUT_ERROR_MESSAGE,\r\n  PRICE_MIN_ERROR_MESSAGE,\r\n  TITLE_ERROR_MESSAGE,\r\n  DESCRIPTION_ERROR_MESSAGE,\r\n  PRICE_MAX_ERROR_MESSAGE,\r\n  MAX_PRICE_CHAR,\r\n  MAX_TITLE_CHAR,\r\n  MAX_DESCRIPTION_CHAR,\r\n  IMAGE_ERROR_MESSAGE,\r\n} from '../utility/Constants';\r\n\r\nexport const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\r\n};\r\n\r\nexport let emptyProductObject = {\r\n  id: null,\r\n  imageUrl: null,\r\n  date: null,\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n};\r\n\r\nexport const inputsValidation = (product) => {\r\n  switch (true) {\r\n    case product.title.length > MAX_TITLE_CHAR:\r\n      return TITLE_ERROR_MESSAGE;\r\n\r\n    case product.description.length > MAX_DESCRIPTION_CHAR:\r\n      return DESCRIPTION_ERROR_MESSAGE;\r\n\r\n    case product.price.length > MAX_PRICE_CHAR:\r\n      return PRICE_MAX_ERROR_MESSAGE;\r\n\r\n    case product.title === '' ||\r\n      product.description === '' ||\r\n      product.price === '':\r\n      return EMPTY_INPUT_ERROR_MESSAGE;\r\n\r\n    case product.price <= 0:\r\n      return PRICE_MIN_ERROR_MESSAGE;\r\n\r\n    case product.imageUrl === null:\r\n      return IMAGE_ERROR_MESSAGE;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const filterListResults = (product, searchField) => {\r\n  if (\r\n    product.title.toLowerCase().includes(searchField.toLowerCase()) ||\r\n    product.description.toLowerCase().includes(searchField.toLowerCase())\r\n  ) {\r\n    return true;\r\n  } else return false;\r\n};\r\n","import {\r\n  SELECT_HIGHER_PRICE,\r\n  SELECT_LAST_ADDED,\r\n  SELECT_TITLE,\r\n} from '../utility/Constants';\r\n\r\n// Last added storage management\r\nexport const addProductToaLastAddedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n  productsArray.push(product);\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem(\r\n    'productsLastAddedSortList',\r\n    JSON.stringify(productsArray)\r\n  );\r\n};\r\n\r\nexport const deleteProductInLastAddedLocalStorage = (product) => {\r\n  let tempArray = [];\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  // Create new array without deleted product element\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id !== product.id) {\r\n      tempArray.push(productsArray[i]);\r\n    }\r\n  }\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsLastAddedSortList', JSON.stringify(tempArray));\r\n};\r\n\r\nexport const updateProductInLastAddedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  // Create new array without deleted product element\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id === product.id) {\r\n      productsArray[i] = product;\r\n    }\r\n  }\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem(\r\n    'productsLastAddedSortList',\r\n    JSON.stringify(productsArray)\r\n  );\r\n};\r\n\r\nexport const getLastAddedProductsList = () => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  return productsArray;\r\n};\r\n\r\n//-------------------------------------------------------------------------------\r\n\r\n// Price sorted storage management\r\nexport const addProductToPriceSortedLocalStorage = (product) => {\r\n  console.log('b');\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsPriceSortList')) || [];\r\n\r\n  // Find correct sorted position for new product element\r\n  // In case of empty list\r\n  if (productsArray.length === 0) {\r\n    productsArray.push(product);\r\n  }\r\n  //In case last element is big then inserted element\r\n  else if (\r\n    parseInt(productsArray[productsArray.length - 1].price) >\r\n    parseInt(product.price)\r\n  ) {\r\n    productsArray.push(product);\r\n  } else {\r\n    for (let i = 0; i < productsArray.length; i++) {\r\n      if (parseInt(productsArray[i].price) < parseInt(product.price)) {\r\n        console.log(productsArray[i].price);\r\n        console.log(product);\r\n\r\n        productsArray.splice(i, 0, product);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsPriceSortList', JSON.stringify(productsArray));\r\n};\r\n\r\nexport const updateProductInPriceSortedLocalStorage = (product) => {\r\n  // Delete product from list and add it again to correct sorted place\r\n  deleteProductInPriceSortedLocalStorage(product);\r\n  addProductToPriceSortedLocalStorage(product);\r\n};\r\n\r\nexport const deleteProductInPriceSortedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsPriceSortList')) || [];\r\n\r\n  // Find product element in array and delete it\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id === product.id) {\r\n      productsArray.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsPriceSortList', JSON.stringify(productsArray));\r\n};\r\n\r\nexport const getPriceSortedProductsList = () => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsPriceSortList')) || [];\r\n\r\n  return productsArray;\r\n};\r\n\r\n//-------------------------------------------------------------------------------\r\n\r\n// Title sorted storage management\r\nexport const addProductToTitleSortedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsTitleSortList')) || [];\r\n\r\n  // Find correct sorted position for new product element\r\n  // In case of empty list\r\n  if (productsArray.length === 0) {\r\n    productsArray.push(product);\r\n  }\r\n  //In case last element is big then inserted element\r\n  else if (\r\n    productsArray[productsArray.length - 1].title.toLowerCase() <\r\n    product.title.toLowerCase()\r\n  ) {\r\n    productsArray.push(product);\r\n  } else {\r\n    for (let i = 0; i < productsArray.length; i++) {\r\n      if (productsArray[i].title.toLowerCase() > product.title.toLowerCase()) {\r\n        productsArray.splice(i, 0, product);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsTitleSortList', JSON.stringify(productsArray));\r\n};\r\n\r\nexport const updateProductInTitleSortedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsTitleSortList')) || [];\r\n\r\n  // Find product element in array and update it\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id === product.id) {\r\n      productsArray[i] = product;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsTitleSortList', JSON.stringify(productsArray));\r\n};\r\n\r\nexport const deleteProductInTitleSortedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsTitleSortList')) || [];\r\n\r\n  // Find product element in array and delete it\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id === product.id) {\r\n      productsArray.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsTitleSortList', JSON.stringify(productsArray));\r\n};\r\n\r\nexport const getTitleSortedProductsList = () => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsTitleSortList')) || [];\r\n\r\n  return productsArray;\r\n};\r\n\r\n// General function\r\nexport const getListFromLocalStorage = (selectSort) => {\r\n  let updateArray = [];\r\n  if (selectSort === SELECT_LAST_ADDED) {\r\n    console.log(SELECT_LAST_ADDED);\r\n    updateArray = getLastAddedProductsList();\r\n  } else if (selectSort === SELECT_HIGHER_PRICE) {\r\n    console.log(SELECT_HIGHER_PRICE);\r\n    updateArray = getPriceSortedProductsList();\r\n  } else if (selectSort === SELECT_TITLE) {\r\n    console.log(SELECT_TITLE);\r\n    updateArray = getTitleSortedProductsList();\r\n  }\r\n  return updateArray;\r\n};\r\n\r\nexport const generateIdFromLocalStorage = (id) => {\r\n  // Get last id number\r\n  let lastIdValue = JSON.parse(localStorage.getItem('lastIdValue')) || 0;\r\n\r\n  // Save new last id number\r\n  localStorage.setItem('lastIdValue', JSON.stringify(lastIdValue + 1));\r\n\r\n  return lastIdValue;\r\n};\r\n","const ItemActionType = {\r\n  INITIAL_ITEMS_ARRAY: 'INITIAL_ITEMS_ARRAY',\r\n};\r\n\r\nexport default ItemActionType;\r\n","import ItemActionType from './items.type';\r\n\r\nexport const initialProductArray = (itemsArray) => ({\r\n  type: ItemActionType.INITIAL_ITEMS_ARRAY,\r\n  payload: itemsArray,\r\n});\r\n","import React from 'react';\r\nimport './PageNumberNevigator.css';\r\nimport { NUM_OF_PRODUCTS_IN_PAGE } from '../../utility/Constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const PageNumberNevigator = ({ page, setPage, filteredProductList }) => {\r\n  const leftPagesNavigateClicked = () => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const rightPagesNavigateClicked = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  return (\r\n    <div id='page-number-wrapper'>\r\n      <div onClick={page > 1 ? leftPagesNavigateClicked : null}>\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          style={{\r\n            fontSize: '2em',\r\n            color: page > 1 ? 'white' : 'rgb(70, 67, 67)',\r\n            marginRight: '0.5vw',\r\n          }}\r\n        />\r\n      </div>\r\n      <div id='page-number'> {page} </div>\r\n\r\n      <div\r\n        onClick={\r\n          page * NUM_OF_PRODUCTS_IN_PAGE < filteredProductList.length\r\n            ? rightPagesNavigateClicked\r\n            : null\r\n        }\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          style={{\r\n            fontSize: '2em',\r\n            color:\r\n              page * NUM_OF_PRODUCTS_IN_PAGE < filteredProductList.length\r\n                ? ' white'\r\n                : 'rgb(70, 67, 67)',\r\n            marginLeft: '0.5vw',\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAE-A62neuu272fA7MY7VWgxUctzNIURwE',\r\n  authDomain: 'product-management-6d658.firebaseapp.com',\r\n  projectId: 'product-management-6d658',\r\n  storageBucket: 'product-management-6d658.appspot.com',\r\n  messagingSenderId: '653275623932',\r\n  appId: '1:653275623932:web:1aedb847f212df211e4279',\r\n  measurementId: 'G-LCRFPLE45M',\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\n\r\nexport { projectStorage };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useStorage } from '../../hooks/UseStorage';\r\nimport './ProductImage.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport defaultIcon from '../../assets/icons/addImageIcon.webp';\r\n\r\nexport const ProductImage = ({ product, setProduct }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  // Fire base state\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n  const handleClick = (event) => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleFirebaseChange = (e) => {\r\n    let selectedFile = e.target.files[0];\r\n\r\n    if (selectedFile) {\r\n      if (types.includes(selectedFile.type)) {\r\n        setError(null);\r\n        setFile(selectedFile);\r\n      } else {\r\n        setFile(null);\r\n        setError('Please select an image file (png or jpg)');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Getting the progress and url from the hook\r\n  const { url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (file !== null) {\r\n      setProduct({ ...product, imageUrl: url });\r\n    }\r\n  }, [url]);\r\n\r\n  return (\r\n    <div id='display-image-wrapper'>\r\n      <img\r\n        id='display-image'\r\n        alt='product illustration'\r\n        style={{ padding: product.imageUrl === null ? '0.2vw' : null }}\r\n        src={product.imageUrl === null ? defaultIcon : product.imageUrl}\r\n        onClick={handleClick}\r\n      />\r\n      <label id='uploade-image'>\r\n        <FontAwesomeIcon\r\n          icon={faUpload}\r\n          style={{ marginLeft: '1vw', width: '2.5vw', height: '2.5vw' }}\r\n        >\r\n          <button onClick={handleClick}></button>\r\n        </FontAwesomeIcon>\r\n        <input\r\n          type='file'\r\n          ref={hiddenFileInput}\r\n          onChange={handleFirebaseChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </label>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { projectStorage } from '../firebase/Config';\r\n\r\nexport const useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  // runs every time the file value changes\r\n  useEffect(() => {\r\n    if (file) {\r\n      // storage ref\r\n      const storageRef = projectStorage.ref(file.name);\r\n\r\n      storageRef.put(file).on(\r\n        'state_changed',\r\n        (snap) => {\r\n          // track the upload progress\r\n          let percentage = Math.round(\r\n            (snap.bytesTransferred / snap.totalBytes) * 100\r\n          );\r\n          setProgress(percentage);\r\n        },\r\n        (err) => {\r\n          setError(err);\r\n        },\r\n        async () => {\r\n          // get the public download img url\r\n          const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n          // save the url to local state\r\n          setUrl(downloadUrl);\r\n        }\r\n      );\r\n    }\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n","import React from 'react';\r\nimport './CloseButton.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const CloseButton = ({\r\n  setAddButtonClick,\r\n  setMarkProductId,\r\n  setProduct,\r\n  emptyProductObject,\r\n}) => {\r\n  // Close button clicked - clear product object\r\n  const closeButtonClicked = () => {\r\n    setAddButtonClick(false);\r\n    setMarkProductId(null);\r\n    setProduct(emptyProductObject);\r\n  };\r\n\r\n  return (\r\n    <div onClick={closeButtonClicked}>\r\n      <FontAwesomeIcon\r\n        icon={faWindowClose}\r\n        style={{ position: 'absolute', right: '0px' }}\r\n        className='colse-button'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Form.css';\r\nimport { connect } from 'react-redux';\r\nimport { initialProductArray } from '../../redux/items/items.actions';\r\n\r\n// Utilities\r\nimport { inputsValidation, emptyProductObject } from '../../utility/Utility';\r\n\r\n// Functions for managing local storage\r\nimport {\r\n  addProductToaLastAddedLocalStorage,\r\n  updateProductInLastAddedLocalStorage,\r\n  addProductToPriceSortedLocalStorage,\r\n  updateProductInPriceSortedLocalStorage,\r\n  addProductToTitleSortedLocalStorage,\r\n  updateProductInTitleSortedLocalStorage,\r\n  generateIdFromLocalStorage,\r\n  getListFromLocalStorage,\r\n} from '../../utility/LocalStorageManagement';\r\n\r\n// Componnets\r\nimport { ProductImage } from '../product-image/ProductImage';\r\nimport { CloseButton } from '../close-button/CloseButton';\r\n\r\nconst DisplayElement = ({\r\n  initialProductArray,\r\n  addButtonClick,\r\n  setAddButtonClick,\r\n  currentItems,\r\n  markProductId,\r\n  setMarkProductId,\r\n  selectSort,\r\n}) => {\r\n  const [product, setProduct] = useState({\r\n    id: null,\r\n    imageUrl: null,\r\n    date: null,\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n  });\r\n  const [finishSaveProduct, setFinishSaveProduct] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const updateExistProduct = useRef(false);\r\n\r\n  // For distinguish between update to save new product\r\n  const saveNewProduct = useRef(false);\r\n\r\n  const handleChange = (event) => {\r\n    setProduct({ ...product, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // Add button clicked\r\n  useEffect(() => {\r\n    if (addButtonClick || finishSaveProduct) {\r\n      setProduct(emptyProductObject);\r\n      setMarkProductId(null);\r\n    }\r\n  }, [addButtonClick, finishSaveProduct, setMarkProductId]);\r\n\r\n  // Update form when product in products list has been clicked\r\n  useEffect(() => {\r\n    // Get product from list\r\n    let productToDisplay = currentItems.find(\r\n      (product) => product.id === markProductId\r\n    );\r\n    if (markProductId !== null) {\r\n      setProduct({\r\n        id: productToDisplay.id,\r\n        imageUrl: productToDisplay.imageUrl,\r\n        date: productToDisplay.date,\r\n        title: productToDisplay.title,\r\n        description: productToDisplay.description,\r\n        price: productToDisplay.price,\r\n      });\r\n    }\r\n  }, [markProductId, currentItems]);\r\n\r\n  // Update product\r\n  useEffect(() => {\r\n    setFinishSaveProduct(false);\r\n\r\n    // Check if need to update product\r\n    if (updateExistProduct.current) {\r\n      let validationResult = inputsValidation(product);\r\n      setErrorMessage(validationResult);\r\n\r\n      if (validationResult === null) {\r\n        // Update product to local storage lists\r\n        updateProductInLastAddedLocalStorage(product);\r\n        updateProductInPriceSortedLocalStorage(product);\r\n        updateProductInTitleSortedLocalStorage(product);\r\n\r\n        // Get relevant update products list elements and update state\r\n        let updateArray = getListFromLocalStorage(selectSort);\r\n        initialProductArray(updateArray);\r\n\r\n        setFinishSaveProduct(true);\r\n        updateExistProduct.current = false;\r\n      } else {\r\n        updateExistProduct.current = false;\r\n      }\r\n    }\r\n  }, [product, initialProductArray, selectSort]);\r\n\r\n  // Create Product\r\n  useEffect(() => {\r\n    setFinishSaveProduct(false);\r\n\r\n    // Check product date and id state is available\r\n    if (\r\n      product.date !== null &&\r\n      product.id !== null &&\r\n      saveNewProduct.current\r\n    ) {\r\n      let validationResult = inputsValidation(product);\r\n      setErrorMessage(validationResult);\r\n\r\n      if (validationResult === null) {\r\n        // Add product to local storage lists\r\n        addProductToaLastAddedLocalStorage(product);\r\n        addProductToPriceSortedLocalStorage(product);\r\n        addProductToTitleSortedLocalStorage(product);\r\n\r\n        // Get relevant update products list elements and update state\r\n        let updateArray = getListFromLocalStorage(selectSort);\r\n        initialProductArray(updateArray);\r\n\r\n        // addItem(product, selectSort);\r\n        setFinishSaveProduct(true);\r\n        saveNewProduct.current = false;\r\n      } else {\r\n        saveNewProduct.current = false;\r\n      }\r\n    }\r\n  }, [product, initialProductArray, selectSort]);\r\n\r\n  const saveButtonClicked = async () => {\r\n    // When product need to be update\r\n    if (markProductId !== null) {\r\n      updateExistProduct.current = true;\r\n      setProduct({ ...product, date: new Date() });\r\n    } else {\r\n      saveNewProduct.current = true;\r\n      setProduct({\r\n        ...product,\r\n        id: generateIdFromLocalStorage(),\r\n        date: new Date(),\r\n      });\r\n    }\r\n  };\r\n\r\n  return addButtonClick || markProductId !== null ? (\r\n    <div id='prducts-display-wrapper'>\r\n      <div id='prducts-display-sub-wrapper'>\r\n        <CloseButton\r\n          setAddButtonClick={setAddButtonClick}\r\n          setMarkProductId={setMarkProductId}\r\n          setProduct={setProduct}\r\n          emptyProductObject={emptyProductObject}\r\n        />\r\n\r\n        <div className='display-title'>Product Details</div>\r\n\r\n        <ProductImage product={product} setProduct={setProduct} />\r\n\r\n        <div className='display-title'>Title</div>\r\n        <input\r\n          id='product-name'\r\n          name='title'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={product.title}\r\n        />\r\n\r\n        <div className='display-title'>Description</div>\r\n        <textarea\r\n          id='product-description'\r\n          name='description'\r\n          value={product.description}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <div className='display-title'>Price</div>\r\n        <div id='bottom-wrapper'>\r\n          <input\r\n            id='product-price'\r\n            name='price'\r\n            type='number'\r\n            value={product.price}\r\n            onChange={handleChange}\r\n          />\r\n          <div id='error-wrapper'>\r\n            <div id='error-message'>{errorMessage}</div>\r\n          </div>\r\n          <button id='save-button' onClick={saveButtonClicked}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  initialProductArray: (itemsArray) =>\r\n    dispatch(initialProductArray(itemsArray)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentItems: state.items.currentItems,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayElement);\r\n","import React, { useRef } from 'react';\r\nimport './ProductElement.css';\r\nimport { formatDate } from '../../utility/Utility';\r\n\r\nconst ProductElement = ({\r\n  id,\r\n  productDetails,\r\n  markProductId,\r\n  setMarkProductId,\r\n  setAddButtonClick,\r\n  setProductIdToDelete,\r\n  finishDeleteProduct,\r\n}) => {\r\n  const booleanDeleteButtonClicked = useRef(false);\r\n\r\n  // Update chosen product id and cancel add button clicked\r\n  const productClicked = () => {\r\n    // Disable product element when clicked two times in a row\r\n    if (markProductId === id) {\r\n      setMarkProductId(null);\r\n      return;\r\n    }\r\n    // Dont mark when delete button clicked\r\n    if (!booleanDeleteButtonClicked.current) {\r\n      setMarkProductId(id);\r\n      setAddButtonClick(false);\r\n    }\r\n  };\r\n\r\n  const deleteButtonClicked = () => {\r\n    booleanDeleteButtonClicked.current = true;\r\n    finishDeleteProduct.current = false;\r\n    setProductIdToDelete(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      id='element-wrapper'\r\n      style={{\r\n        backgroundColor: markProductId === id ? 'rgb(11, 43, 11)' : null,\r\n      }}\r\n      onClick={productClicked}\r\n    >\r\n      <div id='image-wrapper'>\r\n        <img\r\n          id='image'\r\n          src={productDetails.imageUrl}\r\n          alt='product illustration'\r\n        />\r\n      </div>\r\n      <div id='details-wrapper'>\r\n        <textarea id='title' disabled value={productDetails.title} />\r\n        <textarea\r\n          id='description'\r\n          disabled={true}\r\n          value={productDetails.description}\r\n        />\r\n      </div>\r\n      <div id='date'>\r\n        {productDetails.date !== null ? formatDate(productDetails.date) : null}\r\n      </div>\r\n      <div id='delete-button-wrapper'>\r\n        <div id='price'>{productDetails.price}$</div>\r\n        <button id='delete-button' onClick={deleteButtonClicked}>\r\n          delete button\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductElement;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './ProductsList.css';\r\nimport { NUM_OF_PRODUCTS_IN_PAGE } from '../../utility/Constants';\r\nimport { filterListResults } from '../../utility/Utility';\r\nimport {\r\n  deleteProductInPriceSortedLocalStorage,\r\n  deleteProductInLastAddedLocalStorage,\r\n  deleteProductInTitleSortedLocalStorage,\r\n  getListFromLocalStorage,\r\n} from '../../utility/LocalStorageManagement';\r\nimport { connect } from 'react-redux';\r\nimport { initialProductArray } from '../../redux/items/items.actions';\r\nimport { PageNumberNevigator } from '../page-number-nevigator/PageNumberNevigator';\r\nimport Form from '../form/Form';\r\nimport ProductElement from '../product-element/ProductElement';\r\n\r\nconst ProductsList = ({\r\n  addButtonClick,\r\n  setAddButtonClick,\r\n  searchField,\r\n  currentItems,\r\n  initialProductArray,\r\n  selectSort,\r\n}) => {\r\n  const [markProductId, setMarkProductId] = useState(null);\r\n  const [filteredProductList, setFilteredProductList] = useState([]);\r\n  const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const isFirstArrayInitialize = useRef(true);\r\n  const finishDeleteProduct = useRef(false);\r\n\r\n  // When select change, get the relevant list from local storage\r\n  useEffect(() => {\r\n    let productsArray = getListFromLocalStorage(selectSort);\r\n    initialProductArray(productsArray);\r\n    setPage(1);\r\n  }, [selectSort, initialProductArray]);\r\n\r\n  // Filter update array with current search field input\r\n  useEffect(() => {\r\n    let filteredArray = [];\r\n    for (let i = 0; i < currentItems.length; i++) {\r\n      if (filterListResults(currentItems[i], searchField)) {\r\n        filteredArray.push(currentItems[i]);\r\n      }\r\n    }\r\n    setFilteredProductList(filteredArray);\r\n\r\n    //Dont show no products message in first render\r\n    isFirstArrayInitialize.current = false;\r\n  }, [currentItems, searchField]);\r\n\r\n  // After each update in product list, remove background mark from element\r\n  useEffect(() => {\r\n    setMarkProductId(null);\r\n    setProductIdToDelete(null);\r\n  }, [currentItems]);\r\n\r\n  // In case user delete product and there is no products left in page\r\n  useEffect(() => {\r\n    if (\r\n      currentItems.length % NUM_OF_PRODUCTS_IN_PAGE === 0 &&\r\n      page * NUM_OF_PRODUCTS_IN_PAGE > currentItems.length &&\r\n      page > 1\r\n    ) {\r\n      setPage(page - 1);\r\n    }\r\n  }, [page, currentItems]);\r\n\r\n  // When delete button in one of the product press\r\n  useEffect(() => {\r\n    if (productIdToDelete !== null && !finishDeleteProduct.current) {\r\n      setMarkProductId(null);\r\n\r\n      // Get product from list\r\n      let productToDelete = currentItems.find(\r\n        (product) => product.id === productIdToDelete\r\n      );\r\n\r\n      // Update lists in local storage and update state\r\n      deleteProductInLastAddedLocalStorage(productToDelete);\r\n      deleteProductInPriceSortedLocalStorage(productToDelete);\r\n      deleteProductInTitleSortedLocalStorage(productToDelete);\r\n\r\n      // Get relevant update products list elements and update state\r\n      let updateArray = getListFromLocalStorage(selectSort);\r\n\r\n      initialProductArray(updateArray);\r\n\r\n      // Avoid from second delete\r\n      finishDeleteProduct.current = true;\r\n    }\r\n  }, [productIdToDelete, initialProductArray, selectSort, currentItems]);\r\n\r\n  const createPageProductsElements = () => {\r\n    let productsArrayResult = [];\r\n    // Display 4 products in each page\r\n    for (\r\n      let i = (page - 1) * NUM_OF_PRODUCTS_IN_PAGE;\r\n      i < NUM_OF_PRODUCTS_IN_PAGE * page;\r\n      i++\r\n    ) {\r\n      if (filteredProductList[i] === undefined) {\r\n        break;\r\n      }\r\n      productsArrayResult.push(\r\n        <ProductElement\r\n          key={i}\r\n          id={filteredProductList[i].id}\r\n          markProductId={markProductId}\r\n          setMarkProductId={setMarkProductId}\r\n          setAddButtonClick={setAddButtonClick}\r\n          productDetails={filteredProductList[i]}\r\n          setProductIdToDelete={setProductIdToDelete}\r\n          currentItems={currentItems}\r\n          finishDeleteProduct={finishDeleteProduct}\r\n        />\r\n      );\r\n    }\r\n    return productsArrayResult;\r\n  };\r\n\r\n  return (\r\n    <div id='products-display-container-wrapper'>\r\n      <div>\r\n        {filteredProductList.length === 0 && !isFirstArrayInitialize.current ? (\r\n          <div id='no-products-message'>No Products</div>\r\n        ) : (\r\n          <div>\r\n            <div id='products-display-container'>\r\n              {filteredProductList.length > 0\r\n                ? createPageProductsElements()\r\n                : null}\r\n            </div>\r\n            <PageNumberNevigator\r\n              page={page}\r\n              setPage={setPage}\r\n              filteredProductList={filteredProductList}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Form\r\n        addButtonClick={addButtonClick}\r\n        setAddButtonClick={setAddButtonClick}\r\n        markProductId={markProductId}\r\n        setMarkProductId={setMarkProductId}\r\n        setProductIdToDelete={setProductIdToDelete}\r\n        selectSort={selectSort}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentItems: state.items.currentItems,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  initialProductArray: (itemsArray) =>\r\n    dispatch(initialProductArray(itemsArray)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport { TopBar } from './components/top-bar/TopBar';\nimport { ButtonInput } from './components/buttons-input/ButtonInput';\nimport ProductsList from './components/products-list/ProductsList';\nimport { SELECT_LAST_ADDED } from './utility/Constants';\n\nfunction App() {\n  const [addButtonClick, setAddButtonClick] = useState(false);\n  const [searchField, setSearchField] = useState('');\n  const [selectSort, setSelectSort] = useState(SELECT_LAST_ADDED);\n\n  return (\n    <div className='app'>\n      <TopBar />\n      <ButtonInput\n        setSearchField={setSearchField}\n        setAddButtonClick={setAddButtonClick}\n        setSelectSort={setSelectSort}\n      />\n      <ProductsList\n        addButtonClick={addButtonClick}\n        setAddButtonClick={setAddButtonClick}\n        searchField={searchField}\n        selectSort={selectSort}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import ItemActionType from './items.type';\r\n\r\nconst INITIAL_STATE = {\r\n  currentItems: [],\r\n};\r\n\r\nconst itemsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ItemActionType.INITIAL_ITEMS_ARRAY:\r\n      return {\r\n        ...state,\r\n        currentItems: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport itemsReducer from './items/items.reducer';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}