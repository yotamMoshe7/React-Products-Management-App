{"version":3,"sources":["assets/icons/addImageIcon.webp","components/top-bar/TopBar.jsx","utility/Constants.js","components/buttons-input/ButtonInput.jsx","utility/Utility.js","utility/LocalStorageManagement.js","redux/items/items.type.js","redux/items/items.actions.js","components/page-number-nevigator/PageNumberNevigator.jsx","firebase/Config.js","components/product-image/ProductImage.jsx","hooks/UseStorage.js","components/close-button/CloseButton.jsx","components/form/Form.jsx","components/product-element/ProductElement.jsx","components/products-list/ProductsList.jsx","App.jsx","redux/items/items.reducer.js","redux/root-reducer.js","redux/store.js","index.jsx"],"names":["module","exports","__webpack_require__","p","TopBar","react_default","a","createElement","className","SELECT_LAST_ADDED","ButtonInput","_ref","setAddButtonClick","setSearchField","setSelectSort","onClick","type","placeholder","onChange","event","target","value","name","emptyProductObject","id","imageUrl","date","title","description","price","inputsValidation","product","length","filterListResults","searchField","toLowerCase","includes","compareHighestPrice","product1","product2","parseInt","compareLowestPrice","compareLastAdded","compareTitle","getLastAddedProductsList","JSON","parse","localStorage","getItem","generateIdFromLocalStorage","lastIdValue","setItem","stringify","ItemActionType","INITIAL_ITEMS_ARRAY","initialProductArray","productsArray","selectSort","payload","PageNumberNevigator","page","setPage","filteredProductList","index_es","icon","faAngleLeft","style","fontSize","color","marginRight","faAngleRight","marginLeft","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","ProductImage","setProduct","hiddenFileInput","useRef","_useState","useState","_useState2","Object","slicedToArray","file","setFile","_useState3","_useState4","error","setError","types","handleClick","current","click","url","progress","setProgress","_useState5","_useState6","setUrl","useEffect","storageRef","ref","put","on","snap","percentage","Math","round","bytesTransferred","totalBytes","err","asyncToGenerator","regenerator_default","mark","_callee","downloadUrl","wrap","_context","prev","next","getDownloadURL","sent","stop","useStorage","objectSpread","alt","padding","src","defaultIcon","faUpload","width","height","e","selectedFile","files","display","CloseButton","setMarkProductId","faWindowClose","position","right","connect","state","currentItems","items","dispatch","itemsArray","addButtonClick","markProductId","finishSaveProduct","setFinishSaveProduct","errorMessage","setErrorMessage","updateExistProduct","saveNewProduct","handleChange","defineProperty","productToDisplay","find","validationResult","i","updateProductInLastAddedLocalStorage","updateArray","push","addProductToaLastAddedLocalStorage","saveButtonClicked","_ref2","Date","apply","this","arguments","CloseButton_CloseButton","ProductImage_ProductImage","ProductElement","productDetails","setProductIdToDelete","finishDeleteProduct","booleanDeleteButtonClicked","backgroundColor","disabled","dateString","concat","getDate","getMonth","getFullYear","formatDate","setFilteredProductList","productIdToDelete","_useState7","_useState8","isFirstArrayInitialize","filteredArray","tempArray","deleteProductInLastAddedLocalStorage","productsArrayResult","undefined","components_product_element_ProductElement","key","createPageProductsElements","PageNumberNevigator_PageNumberNevigator","form_Form","App","TopBar_TopBar","ButtonInput_ButtonInput","components_products_list_ProductsList","INITIAL_STATE","itemsReducer","action","sort","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d5c8e96d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addImageIcon.786809da.webp\";","import React from 'react';\r\nimport './TopBar.css';\r\n\r\nexport const TopBar = () => {\r\n  return <div className='topBar'>My Store</div>;\r\n};\r\n","export const EMPTY_INPUT_ERROR_MESSAGE = 'Please fill all the input fields';\r\nexport const PRICE_MIN_ERROR_MESSAGE = 'Price must be greater then 0';\r\nexport const TITLE_ERROR_MESSAGE = 'Title can not contain more then 25 chars';\r\nexport const IMAGE_ERROR_MESSAGE = 'Please upload an image';\r\nexport const DESCRIPTION_ERROR_MESSAGE =\r\n  'Description can not contain more then 130 chars';\r\nexport const PRICE_MAX_ERROR_MESSAGE =\r\n  'Price can not contain more then 7 chars';\r\nexport const NUM_OF_PRODUCTS_IN_PAGE = 4;\r\nexport const MAX_TITLE_CHAR = 22;\r\nexport const MAX_DESCRIPTION_CHAR = 130;\r\nexport const MAX_PRICE_CHAR = 7;\r\nexport const SELECT_HIGHEST_PRICE = 'Highest Price';\r\nexport const SELECT_LOWEST_PRICE = 'Lowest Price';\r\nexport const SELECT_LAST_ADDED = 'Last Added';\r\nexport const SELECT_TITLE = 'title';\r\n","import React from 'react';\r\nimport './ButtonInput.css';\r\nimport {\r\n  SELECT_HIGHEST_PRICE,\r\n  SELECT_LOWEST_PRICE,\r\n  SELECT_LAST_ADDED,\r\n  SELECT_TITLE,\r\n} from '../../utility/Constants';\r\n\r\nexport const ButtonInput = ({\r\n  setAddButtonClick,\r\n  setSearchField,\r\n  setSelectSort,\r\n}) => {\r\n  const addButtonClick = () => {\r\n    setAddButtonClick(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  const selectChange = (event) => {\r\n    setSelectSort(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='buttons-input-wrapper'>\r\n      <div className='add-button-wrapper' onClick={addButtonClick}>\r\n        <button className='add-button'>Add +</button>\r\n      </div>\r\n      <div className='input-wrapper'>\r\n        <input\r\n          className='input'\r\n          type='text'\r\n          placeholder='Search Products'\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='sort-by-wrapper'>\r\n        <select name='sort-options' className='sort-by' onChange={selectChange}>\r\n          <option value={SELECT_LAST_ADDED}>{SELECT_LAST_ADDED}</option>\r\n          <option value={SELECT_HIGHEST_PRICE}>{SELECT_HIGHEST_PRICE}</option>\r\n          <option value={SELECT_LOWEST_PRICE}>{SELECT_LOWEST_PRICE}</option>\r\n          <option value={SELECT_TITLE}>{SELECT_TITLE}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  EMPTY_INPUT_ERROR_MESSAGE,\r\n  PRICE_MIN_ERROR_MESSAGE,\r\n  TITLE_ERROR_MESSAGE,\r\n  DESCRIPTION_ERROR_MESSAGE,\r\n  PRICE_MAX_ERROR_MESSAGE,\r\n  MAX_PRICE_CHAR,\r\n  MAX_TITLE_CHAR,\r\n  MAX_DESCRIPTION_CHAR,\r\n  IMAGE_ERROR_MESSAGE,\r\n} from '../utility/Constants';\r\n\r\nexport const formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\r\n};\r\n\r\nexport let emptyProductObject = {\r\n  id: null,\r\n  imageUrl: null,\r\n  date: null,\r\n  title: '',\r\n  description: '',\r\n  price: '',\r\n};\r\n\r\nexport const inputsValidation = (product) => {\r\n  switch (true) {\r\n    case product.title.length > MAX_TITLE_CHAR:\r\n      return TITLE_ERROR_MESSAGE;\r\n\r\n    case product.description.length > MAX_DESCRIPTION_CHAR:\r\n      return DESCRIPTION_ERROR_MESSAGE;\r\n\r\n    case product.price.length > MAX_PRICE_CHAR:\r\n      return PRICE_MAX_ERROR_MESSAGE;\r\n\r\n    case product.title === '' ||\r\n      product.description === '' ||\r\n      product.price === '':\r\n      return EMPTY_INPUT_ERROR_MESSAGE;\r\n\r\n    case product.price <= 0:\r\n      return PRICE_MIN_ERROR_MESSAGE;\r\n\r\n    case product.imageUrl === null:\r\n      return IMAGE_ERROR_MESSAGE;\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const filterListResults = (product, searchField) => {\r\n  if (\r\n    product.title.toLowerCase().includes(searchField.toLowerCase()) ||\r\n    product.description.toLowerCase().includes(searchField.toLowerCase())\r\n  ) {\r\n    return true;\r\n  } else return false;\r\n};\r\n\r\n// Compare implementation depends on select value\r\n\r\nexport const compareHighestPrice = (product1, product2) => {\r\n  if (parseInt(product1.price) < parseInt(product2.price)) {\r\n    return -1;\r\n  }\r\n  if (parseInt(product1.price) > parseInt(product2.price)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const compareLowestPrice = (product1, product2) => {\r\n  if (parseInt(product1.price) > parseInt(product2.price)) {\r\n    return -1;\r\n  }\r\n  if (parseInt(product1.price) < parseInt(product2.price)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const compareLastAdded = (product1, product2) => {\r\n  if (parseInt(product1.date) < parseInt(product2.date)) {\r\n    return -1;\r\n  }\r\n  if (parseInt(product1.date) > parseInt(product2.date)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const compareTitle = (product1, product2) => {\r\n  if (parseInt(product1.date) < parseInt(product2.date)) {\r\n    return -1;\r\n  }\r\n  if (parseInt(product1.date) > parseInt(product2.date)) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n};\r\n","// Last added storage management\r\nexport const addProductToaLastAddedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n  productsArray.push(product);\r\n\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem(\r\n    'productsLastAddedSortList',\r\n    JSON.stringify(productsArray)\r\n  );\r\n};\r\n\r\nexport const deleteProductInLastAddedLocalStorage = (product) => {\r\n  let tempArray = [];\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  // Create new array without deleted product element\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id !== product.id) {\r\n      tempArray.push(productsArray[i]);\r\n    }\r\n  }\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem('productsLastAddedSortList', JSON.stringify(tempArray));\r\n};\r\n\r\nexport const updateProductInLastAddedLocalStorage = (product) => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  // Create new array without deleted product element\r\n  for (let i = 0; i < productsArray.length; i++) {\r\n    if (productsArray[i].id === product.id) {\r\n      productsArray[i] = product;\r\n    }\r\n  }\r\n  // Save products items to last added list local storage\r\n  localStorage.setItem(\r\n    'productsLastAddedSortList',\r\n    JSON.stringify(productsArray)\r\n  );\r\n};\r\n\r\nexport const getLastAddedProductsList = () => {\r\n  let productsArray =\r\n    JSON.parse(localStorage.getItem('productsLastAddedSortList')) || [];\r\n\r\n  return productsArray;\r\n};\r\n\r\nexport const generateIdFromLocalStorage = () => {\r\n  // Get last id number\r\n  let lastIdValue = JSON.parse(localStorage.getItem('lastIdValue')) || 0;\r\n\r\n  // Save new last id number\r\n  localStorage.setItem('lastIdValue', JSON.stringify(lastIdValue + 1));\r\n\r\n  return lastIdValue;\r\n};\r\n","const ItemActionType = {\r\n  INITIAL_ITEMS_ARRAY: 'INITIAL_ITEMS_ARRAY',\r\n};\r\n\r\nexport default ItemActionType;\r\n","import ItemActionType from './items.type';\r\n\r\nexport const initialProductArray = (productsArray, selectSort) => ({\r\n  type: ItemActionType.INITIAL_ITEMS_ARRAY,\r\n  payload: { productsArray: productsArray, selectSort: selectSort },\r\n});\r\n","import React from 'react';\r\nimport './PageNumberNevigator.css';\r\nimport { NUM_OF_PRODUCTS_IN_PAGE } from '../../utility/Constants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faAngleLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const PageNumberNevigator = ({ page, setPage, filteredProductList }) => {\r\n  const leftPagesNavigateClicked = () => {\r\n    setPage(page - 1);\r\n  };\r\n\r\n  const rightPagesNavigateClicked = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  return (\r\n    <div className='page-number-wrapper'>\r\n      <div onClick={page > 1 ? leftPagesNavigateClicked : null}>\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          style={{\r\n            fontSize: '2em',\r\n            color: page > 1 ? 'white' : 'rgb(70, 67, 67)',\r\n            marginRight: '0.5vw',\r\n          }}\r\n        />\r\n      </div>\r\n      <div className='page-number'> {page} </div>\r\n\r\n      <div\r\n        onClick={\r\n          page * NUM_OF_PRODUCTS_IN_PAGE < filteredProductList.length\r\n            ? rightPagesNavigateClicked\r\n            : null\r\n        }\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          style={{\r\n            fontSize: '2em',\r\n            color:\r\n              page * NUM_OF_PRODUCTS_IN_PAGE < filteredProductList.length\r\n                ? ' white'\r\n                : 'rgb(70, 67, 67)',\r\n            marginLeft: '0.5vw',\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAE-A62neuu272fA7MY7VWgxUctzNIURwE',\r\n  authDomain: 'product-management-6d658.firebaseapp.com',\r\n  projectId: 'product-management-6d658',\r\n  storageBucket: 'product-management-6d658.appspot.com',\r\n  messagingSenderId: '653275623932',\r\n  appId: '1:653275623932:web:1aedb847f212df211e4279',\r\n  measurementId: 'G-LCRFPLE45M',\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage = firebase.storage();\r\n\r\nexport { projectStorage };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useStorage } from '../../hooks/UseStorage';\r\nimport './ProductImage.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport defaultIcon from '../../assets/icons/addImageIcon.webp';\r\n\r\nexport const ProductImage = ({ product, setProduct }) => {\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  // Fire base state\r\n  const [file, setFile] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n  const handleClick = (event) => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n\r\n  const handleFirebaseChange = (e) => {\r\n    let selectedFile = e.target.files[0];\r\n\r\n    if (selectedFile) {\r\n      if (types.includes(selectedFile.type)) {\r\n        setError(null);\r\n        setFile(selectedFile);\r\n      } else {\r\n        setFile(null);\r\n        setError('Please select an image file (png or jpg)');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Getting the progress and url from the hook\r\n  const { url } = useStorage(file);\r\n\r\n  useEffect(() => {\r\n    if (file !== null) {\r\n      setProduct({ ...product, imageUrl: url });\r\n    }\r\n  }, [url]);\r\n\r\n  return (\r\n    <div className='display-image-wrapper'>\r\n      <img\r\n        className='display-image'\r\n        alt='product illustration'\r\n        style={{ padding: product.imageUrl === null ? '0.2vw' : null }}\r\n        src={product.imageUrl === null ? defaultIcon : product.imageUrl}\r\n        onClick={handleClick}\r\n      />\r\n      <label className='uploade-image'>\r\n        <FontAwesomeIcon\r\n          icon={faUpload}\r\n          style={{ marginLeft: '1vw', width: '2.5vw', height: '2.5vw' }}\r\n        >\r\n          <button onClick={handleClick}></button>\r\n        </FontAwesomeIcon>\r\n        <input\r\n          type='file'\r\n          ref={hiddenFileInput}\r\n          onChange={handleFirebaseChange}\r\n          style={{ display: 'none' }}\r\n        />\r\n      </label>\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { projectStorage } from '../firebase/Config';\r\n\r\nexport const useStorage = (file) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  // runs every time the file value changes\r\n  useEffect(() => {\r\n    if (file) {\r\n      // storage ref\r\n      const storageRef = projectStorage.ref(file.name);\r\n\r\n      storageRef.put(file).on(\r\n        'state_changed',\r\n        (snap) => {\r\n          // track the upload progress\r\n          let percentage = Math.round(\r\n            (snap.bytesTransferred / snap.totalBytes) * 100\r\n          );\r\n          setProgress(percentage);\r\n        },\r\n        (err) => {\r\n          setError(err);\r\n        },\r\n        async () => {\r\n          // get the public download img url\r\n          const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n          // save the url to local state\r\n          setUrl(downloadUrl);\r\n        }\r\n      );\r\n    }\r\n  }, [file]);\r\n\r\n  return { progress, url, error };\r\n};\r\n","import React from 'react';\r\nimport './CloseButton.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const CloseButton = ({\r\n  setAddButtonClick,\r\n  setMarkProductId,\r\n  setProduct,\r\n  emptyProductObject,\r\n}) => {\r\n  // Close button clicked - clear product object\r\n  const closeButtonClicked = () => {\r\n    setAddButtonClick(false);\r\n    setMarkProductId(null);\r\n    setProduct(emptyProductObject);\r\n  };\r\n\r\n  return (\r\n    <div onClick={closeButtonClicked}>\r\n      <FontAwesomeIcon\r\n        icon={faWindowClose}\r\n        style={{ position: 'absolute', right: '0px' }}\r\n        className='colse-button'\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './Form.css';\r\nimport { connect } from 'react-redux';\r\nimport { initialProductArray } from '../../redux/items/items.actions';\r\nimport { inputsValidation, emptyProductObject } from '../../utility/Utility';\r\nimport {\r\n  addProductToaLastAddedLocalStorage,\r\n  updateProductInLastAddedLocalStorage,\r\n  generateIdFromLocalStorage,\r\n  getLastAddedProductsList,\r\n} from '../../utility/LocalStorageManagement';\r\nimport { ProductImage } from '../product-image/ProductImage';\r\nimport { CloseButton } from '../close-button/CloseButton';\r\n\r\nconst DisplayElement = ({\r\n  initialProductArray,\r\n  addButtonClick,\r\n  setAddButtonClick,\r\n  currentItems,\r\n  markProductId,\r\n  setMarkProductId,\r\n  selectSort,\r\n}) => {\r\n  const [product, setProduct] = useState({\r\n    id: null,\r\n    imageUrl: null,\r\n    date: null,\r\n    title: '',\r\n    description: '',\r\n    price: '',\r\n  });\r\n  const [finishSaveProduct, setFinishSaveProduct] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const updateExistProduct = useRef(false);\r\n\r\n  // For distinguish between update to save new product\r\n  const saveNewProduct = useRef(false);\r\n\r\n  const handleChange = (event) => {\r\n    setProduct({ ...product, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  // Add button clicked\r\n  useEffect(() => {\r\n    if (addButtonClick || finishSaveProduct) {\r\n      setProduct(emptyProductObject);\r\n      setMarkProductId(null);\r\n    }\r\n  }, [addButtonClick, finishSaveProduct]);\r\n\r\n  // Update form with product data when product in products list has been clicked\r\n  useEffect(() => {\r\n    // Get product from list\r\n    let productToDisplay = currentItems.find(\r\n      (product) => product.id === markProductId\r\n    );\r\n    if (markProductId !== null) {\r\n      setProduct({\r\n        id: productToDisplay.id,\r\n        imageUrl: productToDisplay.imageUrl,\r\n        date: productToDisplay.date,\r\n        title: productToDisplay.title,\r\n        description: productToDisplay.description,\r\n        price: productToDisplay.price,\r\n      });\r\n    }\r\n  }, [markProductId, currentItems]);\r\n\r\n  // Update product\r\n  useEffect(() => {\r\n    setFinishSaveProduct(false);\r\n\r\n    // Check if need to update product\r\n    if (updateExistProduct.current) {\r\n      let validationResult = inputsValidation(product);\r\n      setErrorMessage(validationResult);\r\n\r\n      if (validationResult === null) {\r\n        // Update product to local storage lists\r\n        updateProductInLastAddedLocalStorage(product);\r\n\r\n        // Get update products list elements and update state\r\n        let updateArray = getLastAddedProductsList();\r\n        initialProductArray(updateArray, selectSort);\r\n\r\n        setFinishSaveProduct(true);\r\n        updateExistProduct.current = false;\r\n      } else {\r\n        updateExistProduct.current = false;\r\n      }\r\n    }\r\n  }, [product, initialProductArray, selectSort]);\r\n\r\n  // Create new Product\r\n  useEffect(() => {\r\n    setFinishSaveProduct(false);\r\n\r\n    // Check product date and id state is available\r\n    if (\r\n      product.date !== null &&\r\n      product.id !== null &&\r\n      saveNewProduct.current\r\n    ) {\r\n      let validationResult = inputsValidation(product);\r\n      setErrorMessage(validationResult);\r\n\r\n      if (validationResult === null) {\r\n        // Add product to local storage lists\r\n        addProductToaLastAddedLocalStorage(product);\r\n\r\n        // Get update products list elements and update state\r\n        let updateArray = getLastAddedProductsList();\r\n        initialProductArray(updateArray, selectSort);\r\n\r\n        setFinishSaveProduct(true);\r\n        saveNewProduct.current = false;\r\n      } else {\r\n        saveNewProduct.current = false;\r\n      }\r\n    }\r\n  }, [product, initialProductArray, selectSort]);\r\n\r\n  const saveButtonClicked = async () => {\r\n    // When product need to be update\r\n    if (markProductId !== null) {\r\n      updateExistProduct.current = true;\r\n      setProduct({ ...product, date: new Date() });\r\n    }\r\n    // When product need to be save\r\n    else {\r\n      saveNewProduct.current = true;\r\n      setProduct({\r\n        ...product,\r\n        id: generateIdFromLocalStorage(),\r\n        date: new Date(),\r\n      });\r\n    }\r\n  };\r\n\r\n  return addButtonClick || markProductId !== null ? (\r\n    <div className='prducts-display-wrapper'>\r\n      <div className='prducts-display-sub-wrapper'>\r\n        <CloseButton\r\n          setAddButtonClick={setAddButtonClick}\r\n          setMarkProductId={setMarkProductId}\r\n          setProduct={setProduct}\r\n          emptyProductObject={emptyProductObject}\r\n        />\r\n\r\n        <div className='display-title'>Product Details</div>\r\n\r\n        <ProductImage product={product} setProduct={setProduct} />\r\n\r\n        <div className='display-title'>Title</div>\r\n        <input\r\n          className='product-name'\r\n          name='title'\r\n          type='text'\r\n          onChange={handleChange}\r\n          value={product.title}\r\n        />\r\n\r\n        <div className='display-title'>Description</div>\r\n        <textarea\r\n          className='product-description'\r\n          name='description'\r\n          value={product.description}\r\n          onChange={handleChange}\r\n        />\r\n\r\n        <div className='display-title'>Price</div>\r\n        <div className='bottom-wrapper'>\r\n          <input\r\n            className='product-price'\r\n            name='price'\r\n            type='number'\r\n            value={product.price}\r\n            onChange={handleChange}\r\n          />\r\n          <div className='error-wrapper'>\r\n            <div className='error-message'>{errorMessage}</div>\r\n          </div>\r\n          <button className='save-button' onClick={saveButtonClicked}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  initialProductArray: (itemsArray, selectSort) =>\r\n    dispatch(initialProductArray(itemsArray, selectSort)),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentItems: state.items.currentItems,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisplayElement);\r\n","import React, { useRef } from 'react';\r\nimport './ProductElement.css';\r\nimport { formatDate } from '../../utility/Utility';\r\n\r\nconst ProductElement = ({\r\n  id,\r\n  productDetails,\r\n  markProductId,\r\n  setMarkProductId,\r\n  setAddButtonClick,\r\n  setProductIdToDelete,\r\n  finishDeleteProduct,\r\n}) => {\r\n  const booleanDeleteButtonClicked = useRef(false);\r\n\r\n  // Update chosen product id and cancel add button clicked\r\n  const productClicked = () => {\r\n    // Disable product element when clicked two times in a row\r\n    if (markProductId === id) {\r\n      setMarkProductId(null);\r\n      return;\r\n    }\r\n    // Dont mark when delete button clicked\r\n    if (!booleanDeleteButtonClicked.current) {\r\n      setMarkProductId(id);\r\n      setAddButtonClick(false);\r\n    }\r\n  };\r\n\r\n  const deleteButtonClicked = () => {\r\n    booleanDeleteButtonClicked.current = true;\r\n    finishDeleteProduct.current = false;\r\n    setProductIdToDelete(id);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='element-wrapper'\r\n      style={{\r\n        backgroundColor: markProductId === id ? 'rgb(11, 43, 11)' : null,\r\n      }}\r\n      onClick={productClicked}\r\n    >\r\n      <div className='image-wrapper'>\r\n        <img\r\n          className='image'\r\n          src={productDetails.imageUrl}\r\n          alt='product illustration'\r\n        />\r\n      </div>\r\n      <div className='details-wrapper'>\r\n        <textarea className='title' disabled value={productDetails.title} />\r\n        <textarea\r\n          className='description'\r\n          disabled={true}\r\n          value={productDetails.description}\r\n        />\r\n      </div>\r\n      <div className='date'>\r\n        {productDetails.date !== null ? formatDate(productDetails.date) : null}\r\n      </div>\r\n      <div className='delete-button-wrapper'>\r\n        <div className='price'>{productDetails.price}$</div>\r\n        <button className='delete-button' onClick={deleteButtonClicked}>\r\n          delete button\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductElement;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport './ProductsList.css';\r\nimport { NUM_OF_PRODUCTS_IN_PAGE } from '../../utility/Constants';\r\nimport { filterListResults } from '../../utility/Utility';\r\nimport {\r\n  deleteProductInLastAddedLocalStorage,\r\n  getLastAddedProductsList,\r\n} from '../../utility/LocalStorageManagement';\r\nimport { connect } from 'react-redux';\r\nimport { initialProductArray } from '../../redux/items/items.actions';\r\nimport { PageNumberNevigator } from '../page-number-nevigator/PageNumberNevigator';\r\nimport Form from '../form/Form';\r\nimport ProductElement from '../product-element/ProductElement';\r\n\r\nconst ProductsList = ({\r\n  addButtonClick,\r\n  setAddButtonClick,\r\n  searchField,\r\n  currentItems,\r\n  initialProductArray,\r\n  selectSort,\r\n}) => {\r\n  const [markProductId, setMarkProductId] = useState(null);\r\n  const [filteredProductList, setFilteredProductList] = useState([]);\r\n  const [productIdToDelete, setProductIdToDelete] = useState(null);\r\n  const [page, setPage] = useState(1);\r\n  const isFirstArrayInitialize = useRef(true);\r\n  const finishDeleteProduct = useRef(false);\r\n\r\n  // When select change, update list order by selectSort value\r\n  useEffect(() => {\r\n    let productsArray = getLastAddedProductsList();\r\n    initialProductArray(productsArray, selectSort);\r\n    setPage(1);\r\n  }, [selectSort, initialProductArray]);\r\n\r\n  // Filter update array with current search field input\r\n  useEffect(() => {\r\n    let filteredArray = [];\r\n    for (let i = 0; i < currentItems.length; i++) {\r\n      if (filterListResults(currentItems[i], searchField)) {\r\n        filteredArray.push(currentItems[i]);\r\n      }\r\n    }\r\n    setFilteredProductList(filteredArray);\r\n\r\n    //Dont show no products message in first render\r\n    isFirstArrayInitialize.current = false;\r\n  }, [currentItems, searchField]);\r\n\r\n  // After each update in product list, remove background mark from element\r\n  useEffect(() => {\r\n    setMarkProductId(null);\r\n    setProductIdToDelete(null);\r\n  }, [currentItems]);\r\n\r\n  // In case user delete product and there is no products left in page\r\n  useEffect(() => {\r\n    if (\r\n      currentItems.length % NUM_OF_PRODUCTS_IN_PAGE === 0 &&\r\n      page * NUM_OF_PRODUCTS_IN_PAGE > currentItems.length &&\r\n      page > 1\r\n    ) {\r\n      setPage(page - 1);\r\n    }\r\n  }, [page, currentItems]);\r\n\r\n  // When delete button in one of the product press\r\n  useEffect(() => {\r\n    if (productIdToDelete !== null && !finishDeleteProduct.current) {\r\n      setMarkProductId(null);\r\n\r\n      // Get product from list\r\n      let productToDelete = currentItems.find(\r\n        (product) => product.id === productIdToDelete\r\n      );\r\n\r\n      // Update lists in local storage and update state\r\n      deleteProductInLastAddedLocalStorage(productToDelete);\r\n      let updateArray = getLastAddedProductsList();\r\n\r\n      initialProductArray(updateArray, selectSort);\r\n\r\n      // Avoid from second delete\r\n      finishDeleteProduct.current = true;\r\n    }\r\n  }, [productIdToDelete, initialProductArray, selectSort, currentItems]);\r\n\r\n  const createPageProductsElements = () => {\r\n    let productsArrayResult = [];\r\n    // Display 4 products in each page\r\n    for (\r\n      let i = (page - 1) * NUM_OF_PRODUCTS_IN_PAGE;\r\n      i < NUM_OF_PRODUCTS_IN_PAGE * page;\r\n      i++\r\n    ) {\r\n      if (filteredProductList[i] === undefined) {\r\n        break;\r\n      }\r\n      productsArrayResult.push(\r\n        <ProductElement\r\n          key={i}\r\n          id={filteredProductList[i].id}\r\n          markProductId={markProductId}\r\n          setMarkProductId={setMarkProductId}\r\n          setAddButtonClick={setAddButtonClick}\r\n          productDetails={filteredProductList[i]}\r\n          setProductIdToDelete={setProductIdToDelete}\r\n          currentItems={currentItems}\r\n          finishDeleteProduct={finishDeleteProduct}\r\n        />\r\n      );\r\n    }\r\n    return productsArrayResult;\r\n  };\r\n\r\n  return (\r\n    <div className='products-display-container-wrapper'>\r\n      <div>\r\n        {filteredProductList.length === 0 && !isFirstArrayInitialize.current ? (\r\n          <div className='no-products-message'>No Products</div>\r\n        ) : (\r\n          <div>\r\n            <div className='products-display-container'>\r\n              {filteredProductList.length > 0\r\n                ? createPageProductsElements()\r\n                : null}\r\n            </div>\r\n            <PageNumberNevigator\r\n              page={page}\r\n              setPage={setPage}\r\n              filteredProductList={filteredProductList}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Form\r\n        addButtonClick={addButtonClick}\r\n        setAddButtonClick={setAddButtonClick}\r\n        markProductId={markProductId}\r\n        setMarkProductId={setMarkProductId}\r\n        setProductIdToDelete={setProductIdToDelete}\r\n        selectSort={selectSort}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  currentItems: state.items.currentItems,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  initialProductArray: (itemsArray, selectSort) =>\r\n    dispatch(initialProductArray(itemsArray, selectSort)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsList);\r\n","import React, { useState } from 'react';\r\nimport { TopBar } from './components/top-bar/TopBar';\r\nimport { ButtonInput } from './components/buttons-input/ButtonInput';\r\nimport ProductsList from './components/products-list/ProductsList';\r\nimport { SELECT_LAST_ADDED } from './utility/Constants';\r\n\r\nfunction App() {\r\n  const [addButtonClick, setAddButtonClick] = useState(false);\r\n  const [searchField, setSearchField] = useState('');\r\n  const [selectSort, setSelectSort] = useState(SELECT_LAST_ADDED);\r\n\r\n  return (\r\n    <div className='app'>\r\n      <TopBar />\r\n      <ButtonInput\r\n        setSearchField={setSearchField}\r\n        setAddButtonClick={setAddButtonClick}\r\n        setSelectSort={setSelectSort}\r\n      />\r\n      <ProductsList\r\n        addButtonClick={addButtonClick}\r\n        setAddButtonClick={setAddButtonClick}\r\n        searchField={searchField}\r\n        selectSort={selectSort}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ItemActionType from './items.type';\r\nimport {\r\n  compareLowestPrice,\r\n  compareHighestPrice,\r\n  compareLastAdded,\r\n  compareTitle,\r\n} from '../../utility/Utility';\r\nimport {\r\n  SELECT_HIGHEST_PRICE,\r\n  SELECT_LAST_ADDED,\r\n  SELECT_LOWEST_PRICE,\r\n  SELECT_TITLE,\r\n} from '../../utility/Constants';\r\n\r\nconst INITIAL_STATE = {\r\n  currentItems: [],\r\n};\r\n\r\nconst itemsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ItemActionType.INITIAL_ITEMS_ARRAY:\r\n      // Get array and sort it by select value\r\n      let productsArray = action.payload.productsArray;\r\n      if (action.payload.selectSort === SELECT_HIGHEST_PRICE) {\r\n        productsArray = productsArray.sort(compareLowestPrice);\r\n      } else if (action.payload.selectSort === SELECT_LOWEST_PRICE) {\r\n        productsArray = productsArray.sort(compareHighestPrice);\r\n      } else if (action.payload.selectSort === SELECT_LAST_ADDED) {\r\n        productsArray = productsArray.sort(compareLastAdded);\r\n      }\r\n      if (action.payload.selectSort === SELECT_TITLE) {\r\n        productsArray = productsArray.sort(compareTitle);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        currentItems: productsArray,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default itemsReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport itemsReducer from './items/items.reducer';\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}